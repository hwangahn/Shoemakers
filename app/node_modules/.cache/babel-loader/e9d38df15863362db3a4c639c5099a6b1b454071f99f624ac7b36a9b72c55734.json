{"ast":null,"code":"import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"names":["createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","genPresetColor","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","rootDesignToken","theme","components","useContext","salt","mergedTheme","hashId","override","Object","assign"],"sources":["C:/Users/hoang/OneDrive/Documents/GitHub/Shoemakers/app/node_modules/antd/es/theme/internal.js"],"sourcesContent":["import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAClF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,eAAe;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE,OAAOC,cAAc,IAAIC,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACjF,OAAOC,cAAc,MAAM,uBAAuB;AAClD,MAAMC,YAAY,GAAGf,WAAW,CAACM,iBAAiB,CAAC;AACnD;AACA;AACAD,YAAY;AACZ;AACAQ,SAAS,EAAEH,cAAc,EAAEE,UAAU;AACrC;AACAV,gBAAgB,EAAEO,qBAAqB,EAAEK,cAAc;AACvD;AACA;AACA,OAAO,MAAME,aAAa,GAAG;EAC3BC,KAAK,EAAEV,gBAAgB;EACvBW,MAAM,EAAE;AACV,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAG,aAAahB,KAAK,CAACiB,aAAa,CAACJ,aAAa,CAAC;AACjF;AACA,OAAO,SAASK,QAAQA,CAAA,EAAG;EACzB,MAAM;IACJJ,KAAK,EAAEK,eAAe;IACtBJ,MAAM;IACNK,KAAK;IACLC;EACF,CAAC,GAAGrB,KAAK,CAACsB,UAAU,CAACN,kBAAkB,CAAC;EACxC,MAAMO,IAAI,GAAI,GAAEtB,OAAQ,IAAGc,MAAM,IAAI,EAAG,EAAC;EACzC,MAAMS,WAAW,GAAGJ,KAAK,IAAIR,YAAY;EACzC,MAAM,CAACE,KAAK,EAAEW,MAAM,CAAC,GAAG3B,aAAa,CAAC0B,WAAW,EAAE,CAACpB,gBAAgB,EAAEe,eAAe,CAAC,EAAE;IACtFI,IAAI;IACJG,QAAQ,EAAEC,MAAM,CAACC,MAAM,CAAC;MACtBF,QAAQ,EAAEP;IACZ,CAAC,EAAEE,UAAU,CAAC;IACdhB;EACF,CAAC,CAAC;EACF,OAAO,CAACmB,WAAW,EAAEV,KAAK,EAAEC,MAAM,GAAGU,MAAM,GAAG,EAAE,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}